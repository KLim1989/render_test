import{_ as a,c as i,a2 as n,o as e}from"./chunks/framework.C9NVOr0y.js";const c=JSON.parse('{"title":"Настройка плагинов","description":"","frontmatter":{"title":"Настройка плагинов"},"headers":[],"relativePath":"manuals/03-how-to-setup-terminal/03-how-to-setup-terminal-plugins.md","filePath":"manuals/03-how-to-setup-terminal/03-how-to-setup-terminal-plugins.md","lastUpdated":1732039790000}'),l={name:"manuals/03-how-to-setup-terminal/03-how-to-setup-terminal-plugins.md"};function t(h,s,p,r,k,o){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="как-настроить-плагины-для-терминала" tabindex="-1">Как настроить плагины для терминала? <a class="header-anchor" href="#как-настроить-плагины-для-терминала" aria-label="Permalink to &quot;Как настроить плагины для терминала?&quot;">​</a></h1><h2 id="установка-и-настроика-oh-my-zsh" tabindex="-1">Установка и настройка Oh My Zsh <a class="header-anchor" href="#установка-и-настроика-oh-my-zsh" aria-label="Permalink to &quot;Установка и настройка Oh My Zsh&quot;">​</a></h2><p>Установка описана в <a href="./../01-how-to-setup-work-environment/02-05-how-to-install-oh-my-zsh.html">этом руководстве</a>.</p><p>После первоначальной настройки Oh My Zsh вы можете изменять настройки в файле <code>$HOME/.zshrc</code>.</p><details><summary>Рекомендуемые настройки:</summary><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ZSH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.oh-my-zsh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ZSH_THEME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;robbyrussell&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Case-sensitive completion</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CASE_SENSITIVE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Hyphen-insensitive completion.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Case-sensitive completion must be off. _ and - will be interchangeable.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HYPHEN_INSENSITIVE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Change the auto-update behavior</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># zstyle &#39;:omz:update&#39; mode disabled  # disable automatic updates</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># zstyle &#39;:omz:update&#39; mode auto      # update automatically without asking</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zstyle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;:omz:update&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reminder</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # just remind me to update when it&#39;s time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Change how often to auto-update (in days).</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zstyle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;:omz:update&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frequency</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Uncomment the following line if pasting URLs and other text is messed up.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DISABLE_MAGIC_FUNCTIONS=&quot;true&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Disable colors in ls</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DISABLE_LS_COLORS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Disable auto-setting terminal title</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DISABLE_AUTO_TITLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Enable command auto-correction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ENABLE_CORRECTION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Display red dots whilst waiting for completion.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You can also set it to another string to have that shown instead of the default red dots.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># e.g. COMPLETION_WAITING_DOTS=&quot;%F{yellow}waiting...%f&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Caution: this setting can cause issues with multiline prompts in zsh &lt; 5.7.1 (see #5765)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">COMPLETION_WAITING_DOTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Disable marking untracked files under VCS as dirty.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This makes repository status check for large repositories much, much faster.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DISABLE_UNTRACKED_FILES_DIRTY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Change the command execution time stamp shown in the history command output.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You can set one of the optional three formats:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or set a custom format using the strftime function format specifications,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># see &#39;man strftime&#39; for details.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HIST_STAMPS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dd.mm.yyyy&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Colorize supports pygmentize and chroma as syntax highlighter.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># By default colorize uses pygmentize unless it&#39;s not installed and chroma is.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This can be overridden by the ZSH_COLORIZE_TOOL environment variable:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ZSH_COLORIZE_TOOL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">chroma</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pygments offers multiple styles.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># By default, the default style is used,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># but you can choose another theme by setting the ZSH_COLORIZE_STYLE environment variable:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ZSH_COLORIZE_STYLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;monokai&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Chroma supports terminal output in 8 color, 256 color, and true-color.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If you need to change the default terminal output style from the standard 8 color output,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># set the ZSH_COLORIZE_CHROMA_FORMATTER environment variable:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ZSH_COLORIZE_CHROMA_FORMATTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">terminal256</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Which plugins would you like to load?</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Standard plugins can be found in $ZSH/plugins/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example format: plugins=(rails git textmate ruby lighthouse)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add wisely, as too many plugins slow down shell startup.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # тут укажите необходимые вам плагины, разделяя пробелом или переносом строки</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ZSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/oh-my-zsh.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">###</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### Oh My Zsh user configuration</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">###</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># export MANPATH=&quot;/usr/local/man:$MANPATH&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You may need to manually set your language environment</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># export LANG=en_US.UTF-8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Preferred editor for local and remote sessions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $SSH_CONNECTION ]]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EDITOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nano&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EDITOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;idea&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Compilation flags</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># export ARCHFLAGS=&quot;-arch $(uname -m)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set personal aliases, overriding those provided by Oh My Zsh libs,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># plugins, and themes. Aliases can be placed here, though Oh My Zsh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># users are encouraged to define aliases within a top-level file in</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># the $ZSH_CUSTOM folder, with .zsh extension. Examples:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - $ZSH_CUSTOM/aliases.zsh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - $ZSH_CUSTOM/macos.zsh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For a full list of active aliases, run \`alias\`.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Example aliases</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># alias zshconfig=&quot;mate ~/.zshrc&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># alias ohmyzsh=&quot;mate ~/.oh-my-zsh&quot;</span></span></code></pre></div></details><h2 id="установка-и-настроика-приглашения-команднои-строки" tabindex="-1">Установка и настройка приглашения командной строки <a class="header-anchor" href="#установка-и-настроика-приглашения-команднои-строки" aria-label="Permalink to &quot;Установка и настройка приглашения командной строки&quot;">​</a></h2><p>Чтобы приглашение командной строки терминала выводило полезную информацию, поддавалось настройке и просто выглядело приятно глазу, можно установить сторонний промпт.</p><p>Одним из таких рекомендуемых промптов является <a href="https://starship.rs/" target="_blank" rel="noreferrer">Starship</a>.</p><p>Чтобы установить и провести первоначальную настройку Starship, следуйте инструкциям на официальном сайте.</p><p>После первоначальной настройки вы можете изменять настройки в файле <code>$HOME/.config/starship.toml</code>.</p><details><summary>Рекомендуемые настройки:</summary><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Timeout for commands executed by starship (in milliseconds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># command_timeout = 2000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Inserts a blank line between shell prompts</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">add_newline = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># A continuation prompt that displays two filled-in arrows</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># continuation_prompt = &#39;▶▶ &#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">disabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show_always = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#style_user = &#39;bold white&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#style_root = &#39;bold red&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">format = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[$user]($style) &#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">env_var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">variable = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SHELL&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">symbol = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">default = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;unknown shell&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">format = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;via [$env_value]($style) &#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">disabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map_symbol = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pipestatus = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">recognize_signal_code = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pipestatus_separator = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;|&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">symbol = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">not_executable_symbol = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">not_found_symbol = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sigint_symbol = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">signal_symbol = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">success_symbol = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">style = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bg:transparent&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">format = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[$symbol$common_meaning$signal_name$maybe_int]($style) &#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pipestatus_format = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\[$pipestatus\\] =&gt; [$symbol$common_meaning$signal_name$maybe_int]($style) &#39;</span></span></code></pre></div></details><h2 id="установка-и-настроика-плагинов" tabindex="-1">Установка и настройка плагинов <a class="header-anchor" href="#установка-и-настроика-плагинов" aria-label="Permalink to &quot;Установка и настройка плагинов&quot;">​</a></h2><p>В данном разделе будет описана настройка только рекомендуемых плагинов.</p><p>Больше плагинов для Oh My Zsh можно найти <a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins" target="_blank" rel="noreferrer">в официальной документации Oh My Zsh</a> или на GitHub.</p><h3 id="плагин-colored-man-pages" tabindex="-1">Плагин <code>colored-man-pages</code> <a class="header-anchor" href="#плагин-colored-man-pages" aria-label="Permalink to &quot;Плагин \`colored-man-pages\`&quot;">​</a></h3><p>Этот плагин улучшает отображение страниц справки <code>man</code>, добавляя к ним цветовое выделение. Благодаря этому информация становится более наглядной и удобной для восприятия.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/colored-man-pages" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-colorize" tabindex="-1">Плагин <code>colorize</code> <a class="header-anchor" href="#плагин-colorize" aria-label="Permalink to &quot;Плагин \`colorize\`&quot;">​</a></h3><p>Этот плагин позволяет подсвечивать синтаксис для более чем 300 поддерживаемых языков программирования и других текстовых форматов.</p><p>Плагин автоматически подсвечивает содержимое файла на основе его расширения. Если подходящий метод подсветки синтаксиса для данного расширения не найден, плагин попытается определить его, анализируя содержимое файла. В случае отсутствия подходящей подсветки файл будет выведен в обычном формате без изменений.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/colorize" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-copybuffer" tabindex="-1">Плагин <code>copybuffer</code> <a class="header-anchor" href="#плагин-copybuffer" aria-label="Permalink to &quot;Плагин \`copybuffer\`&quot;">​</a></h3><p>Этот плагин добавляет сочетание клавиш <code>Ctrl+O</code> для копирования текущего текста из командной строки в системный буфер обмена.</p><p>Это особенно полезно, если вы ввели команду и, прежде чем нажать Enter для её выполнения, хотите скопировать её, чтобы затем вставить в скрипт, gist или другое место.</p><p>Такой подход экономит время и упрощает работу с терминалом.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/copybuffer" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-copyfile" tabindex="-1">Плагин <code>copyfile</code> <a class="header-anchor" href="#плагин-copyfile" aria-label="Permalink to &quot;Плагин \`copyfile\`&quot;">​</a></h3><p>Этот плагин позволяет скопировать содержимое файла в системный буфер обмена, чтобы вы могли вставить его в любое место.</p><p>Удобно для быстрого переноса текста или кода из файлов без необходимости их открывать в редакторе.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/copyfile" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-dirhistory" tabindex="-1">Плагин <code>dirhistory</code> <a class="header-anchor" href="#плагин-dirhistory" aria-label="Permalink to &quot;Плагин \`dirhistory\`&quot;">​</a></h3><p>Этот плагин позволяет перемещаться по истории ранее использованных директорий с помощью сочетаний клавиш <code>Alt + Стрелка влево</code> и <code>Alt + Стрелка вправо</code>.</p><p><code>Alt + Стрелка влево</code> перемещает вас в предыдущие директории, а <code>Alt + Стрелка вправо</code> — возвращает в недавние папки.</p><p>Кроме того, вы можете перемещаться по иерархии директорий с помощью <code>Alt + Стрелка вверх</code> и <code>Alt + Стрелка вниз</code>.</p><p><code>Alt + Стрелка вверх</code> перенесёт вас в родительскую директорию, а <code>Alt + Стрелка вниз</code> — в первую дочернюю директорию, найденную в алфавитном порядке.</p><p>Это полезно для быстрой навигации по длинным пустым каталогам.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/dirhistory" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-fzf" tabindex="-1">Плагин <code>fzf</code> <a class="header-anchor" href="#плагин-fzf" aria-label="Permalink to &quot;Плагин \`fzf\`&quot;">​</a></h3><p>Этот плагин – интерактивный фильтр для любых списков: файлов, истории команд, процессов, хостнеймов, закладок, git-коммитов и так далее. Он использует алгоритм “нестрогого” поиска, что позволяет быстро вводить паттерны с пропущенными символами и всё равно получать нужные результаты. Такой подход значительно ускоряет поиск и делает его более гибким, даже если вы не помните точное написание элемента.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/junegunn/fzf" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-fzf-tab" tabindex="-1">Плагин <code>fzf-tab</code> <a class="header-anchor" href="#плагин-fzf-tab" aria-label="Permalink to &quot;Плагин \`fzf-tab\`&quot;">​</a></h3><p>Этот плагин интегрирует fzf (интерактивный фильтр) в систему автодополнений Zsh, предоставляя более удобный и быстрый способ выбора вариантов. Вместо стандартного списка предложений, вы получите динамичное окно фильтрации, в котором сможете искать и выбирать нужный вариант с помощью поиска. Это значительно улучшает опыт работы с автодополнениями и ускоряет навигацию по длинным спискам.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/Aloxaf/fzf-tab" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-jsontools" tabindex="-1">Плагин <code>jsontools</code> <a class="header-anchor" href="#плагин-jsontools" aria-label="Permalink to &quot;Плагин \`jsontools\`&quot;">​</a></h3><p>Этот плагин предоставляет несколько команд, которые упрощают работу с JSON в терминале.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/jsontools" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-macos" tabindex="-1">Плагин <code>macos</code> <a class="header-anchor" href="#плагин-macos" aria-label="Permalink to &quot;Плагин \`macos\`&quot;">​</a></h3><p>Этот плагин предоставляет утилиты, которые делают взаимодействие с macOS и приложениями (такими как Finder, Xcode и др.) более удобным и приятным.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/macos" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-pod" tabindex="-1">Плагин <code>pod</code> <a class="header-anchor" href="#плагин-pod" aria-label="Permalink to &quot;Плагин \`pod\`&quot;">​</a></h3><p>Этот плагин добавляет автодополнение для CocoaPods — менеджера зависимостей для проектов на Swift и Objective-C в экосистеме Cocoa. Он ускоряет работу с командной строкой, предлагая автоматическое дополнение команд и параметров, связанных с управлением зависимостями.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/pod" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-safe-paste" tabindex="-1">Плагин <code>safe-paste</code> <a class="header-anchor" href="#плагин-safe-paste" aria-label="Permalink to &quot;Плагин \`safe-paste\`&quot;">​</a></h3><p>Этот плагин предотвращает выполнение кода при вставке, давая вам возможность сначала проверить вставленный текст, прежде чем он будет запущен.</p><p>Это полезно для предотвращения случайных или вредоносных команд, особенно если вы вставляете код из ненадежных источников. Вы сможете убедиться, что все команды безопасны и соответствуют вашим намерениям, прежде чем они будут выполнены.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/safe-paste" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-sudo" tabindex="-1">Плагин <code>sudo</code> <a class="header-anchor" href="#плагин-sudo" aria-label="Permalink to &quot;Плагин \`sudo\`&quot;">​</a></h3><p>Этот плагин позволяет легко добавлять <code>sudo</code> к текущей или предыдущей команде, просто дважды нажав клавишу <code>Esc</code>.</p><p>Это ускоряет выполнение команд с правами администратора, особенно если вы забыли добавить <code>sudo</code> перед вводом команды. После нажатия <code>Esc</code> дважды, плагин автоматически добавит <code>sudo</code> к команде, и вам не нужно будет вручную редактировать её.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/sudo" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-z" tabindex="-1">Плагин <code>z</code> <a class="header-anchor" href="#плагин-z" aria-label="Permalink to &quot;Плагин \`z\`&quot;">​</a></h3><p>Этот плагин добавляет команду <code>z</code>, которая отслеживает ваши часто посещаемые директории и позволяет быстро перемещаться по ним с минимальными усилиями. Чем чаще вы посещаете определённую директорию, тем быстрее вы сможете попасть в неё с помощью <code>z</code>, так как команда запоминает путь и использует его для быстрого доступа.</p><p>Это значительно ускоряет навигацию по файловой системе, экономя время и сокращая количество нажатий клавиш.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/z" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-zsh-autosuggestions" tabindex="-1">Плагин <code>zsh-autosuggestions</code> <a class="header-anchor" href="#плагин-zsh-autosuggestions" aria-label="Permalink to &quot;Плагин \`zsh-autosuggestions\`&quot;">​</a></h3><p>Этот плагин добавляет функциональность автоподсказок для Zsh. Он предлагает команды, которые вы могли бы ввести, прямо во время набора, основываясь на вашей истории команд и возможных автодополнениях. Подсказки появляются незаметно и не мешают процессу работы, что делает использование терминала быстрее и удобнее.</p><p>Это особенно полезно для тех, кто часто использует повторяющиеся команды, так как плагин помогает сэкономить время и минимизировать ошибки при наборе.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noreferrer">официальной документации</a>.</p><h3 id="плагин-zsh-syntax-highlighting" tabindex="-1">Плагин <code>zsh-syntax-highlighting</code> <a class="header-anchor" href="#плагин-zsh-syntax-highlighting" aria-label="Permalink to &quot;Плагин \`zsh-syntax-highlighting\`&quot;">​</a></h3><p>Этот плагин добавляет подсветку синтаксиса для Zsh. Он подсвечивает синтаксис команд, когда вы их вводите в терминале с Zsh.</p><p>Это помогает быстро выявить синтаксические ошибки и улучшает процесс проверки команд перед их выполнением.</p><p>Для установки и настройки следуйте инструкциям в <a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noreferrer">официальной документации</a>.</p>`,72)]))}const g=a(l,[["render",t]]);export{c as __pageData,g as default};
